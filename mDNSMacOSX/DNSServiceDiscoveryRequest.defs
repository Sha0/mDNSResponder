/*
 * Copyright (c) 2002 Apple Computer, Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 * 
 * The contents of this file constitute Original Code as defined in and
 * are subject to the Apple Public Source License Version 1.2 (the
 * "License").  You may not use this file except in compliance with the
 * License.  Please obtain a copy of the License at
 * http://www.apple.com/publicsource and read it before using this file.
 * 
 * This Original Code and all software distributed under the License are
 * distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
 * License for the specific language governing rights and limitations
 * under the License.
 * 
 * @APPLE_LICENSE_HEADER_END@
 */
 
subsystem
	DNSServiceDiscoveryRequest 7200;

ServerPrefix provide_;

#include <mach/std_types.defs>
#include <mach/mach_types.defs>

import "DNSServiceDiscoveryDefines.h";

type DNSCString = c_string[*:1024];
type record_data = ^ array [] of MACH_MSG_TYPE_BYTE
				ctype: record_data_t;

simpleroutine DNSServiceBrowserCreate_rpc(
				server: mach_port_t;
                        in	client: mach_port_t;
						in	regtype: DNSCString;
						in	domain: DNSCString);
                                                

simpleroutine DNSServiceDomainEnumerationCreate_rpc(
				server: mach_port_t;
                        in	client: mach_port_t;
						in	registrationDomains: int);

simpleroutine DNSServiceRegistrationCreate_rpc(
				server: mach_port_t;
                        in	client: mach_port_t;
                        in	name: DNSCString;
                        in	regtype: DNSCString;
                        in	domain: DNSCString;
                        in	port: int;
                        in	txtRecord: DNSCString);

                        
simpleroutine DNSServiceResolverResolve_rpc(
				server: mach_port_t;
                        in	client: mach_port_t;
                        in	name: DNSCString;
                        in	regtype: DNSCString;
                        in	domain: DNSCString);

routine DNSServiceRegistrationAddRecord_rpc(
				server: mach_port_t;
						in client: mach_port_t;
						in record_type: int;
						in record_data: record_data;
						in ttl: uint32_t;
						out record_reference: natural_t);

simpleroutine DNSServiceRegistrationUpdateRecord_rpc(
				server: mach_port_t;
						in client: mach_port_t;
                                                in record_reference: natural_t;
						in record_data: record_data;
						in ttl: uint32_t);

simpleroutine DNSServiceRegistrationRemoveRecord_rpc(
				server: mach_port_t;
						in client: mach_port_t;
						in record_reference: natural_t);
