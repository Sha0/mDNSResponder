/*
 * Copyright (c) 2007 Apple Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <mach/std_types.defs>
#include <mach/mach_types.defs>

import "helpermsg-types.h";

type v6addr_t = array [16] of uint8_t;
type v4addr_t = array [4] of uint8_t;
type string_t = c_string[*:1024];

subsystem helper 1833193043;
serverprefix do_;
userprefix proxy_;

simpleroutine mDNSIdleExit(
				port		: mach_port_t;
	ServerAuditToken	token		: audit_token_t);

routine mDNSDynamicStoreSetConfig(
				port		: mach_port_t;
				key		: int;
				value		: pointer_t;
	out			err		: int;
	ServerAuditToken	token		: audit_token_t);

routine mDNSPreferencesSetName(
				port		: mach_port_t;
				key		: int;
				value		: pointer_t;
				encoding	: unsigned;
	out			err		: int;
	ServerAuditToken	token		: audit_token_t);

routine mDNSKeychainGetSecrets(
				port		: mach_port_t;
	out			numsecrets	: unsigned;
	out			secrets		: pointer_t;
	out			err		: int;
	ServerAuditToken	token		: audit_token_t);

routine mDNSCreateStateDir(
				port		: mach_port_t;
	out			err		: int;
	ServerAuditToken	token		: audit_token_t);

routine mDNSAutoTunnelInterfaceUpDown(
				port		: mach_port_t;
				updown		: int;
				address		: v6addr_t;
	out			err		: int;
	ServerAuditToken	token		: audit_token_t);

routine mDNSRacoonNotify(
				port		: mach_port_t;
				keydata		: string_t;
	out			err		: int;
	ServerAuditToken	token		: audit_token_t);

routine mDNSAutoTunnelSetKeys(
				port		: mach_port_t;
				replacedelete	: int;
				local_inner	: v6addr_t;
				local_outer	: v4addr_t;
				local_port	: short;
				remote_inner	: v6addr_t;
				remote_outer	: v4addr_t;
				remote_port	: short;
				keydata		: string_t;
	out			err		: int;
	ServerAuditToken	token		: audit_token_t);
